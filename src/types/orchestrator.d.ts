/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["OrchestratorService_Health"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/workspaces": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["OrchestratorService_ListWorkspaces"];
        put?: never;
        post: operations["OrchestratorService_CreateWorkspace"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/workspaces/{workspace_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["OrchestratorService_GetWorkspace"];
        put?: never;
        post?: never;
        delete: operations["OrchestratorService_DeleteWorkspace"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/workspaces/{workspace_id}/sessions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["OrchestratorService_ListSessions"];
        put?: never;
        post: operations["OrchestratorService_CreateSession"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/workspaces/{workspace_id}/sessions/{session_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["OrchestratorService_GetSession"];
        put?: never;
        post?: never;
        delete: operations["OrchestratorService_DeleteSession"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/workspaces/{workspace_id}/sessions/{session_id}/proxy": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["OrchestratorService_ProxyHTTP"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @example {
         *       "code": 3,
         *       "details": [
         *         {
         *           "@type": "type.googleapis.com/google.rpc.ErrorInfo",
         *           "domain": "",
         *           "metadata": {
         *             "field": "phoneNumber"
         *           },
         *           "reason": "INVALID_PARAMETERS"
         *         }
         *       ],
         *       "message": "must be at least 11 characters long"
         *     } */
        BadRequest: {
            code?: number;
            details?: {
                "@type"?: string;
                domain?: string;
                metadata?: Record<string, never>;
                reason?: string;
            }[];
            message?: string;
        };
        /** @example {
         *       "code": 3,
         *       "details": [
         *         {
         *           "@type": "type.googleapis.com/google.rpc.ErrorInfo",
         *           "domain": "",
         *           "metadata": {
         *             "field": "phoneNumber"
         *           },
         *           "reason": "INVALID_PARAMETERS"
         *         }
         *       ],
         *       "message": "must be at least 11 characters long"
         *     } */
        InternalServerError: {
            code?: number;
            details?: {
                "@type"?: string;
                domain?: string;
                metadata?: Record<string, never>;
                reason?: string;
            }[];
            message?: string;
        };
        /** @example {
         *       "code": 3,
         *       "details": [
         *         {
         *           "@type": "type.googleapis.com/google.rpc.ErrorInfo",
         *           "domain": "",
         *           "metadata": {
         *             "field": "phoneNumber"
         *           },
         *           "reason": "INVALID_PARAMETERS"
         *         }
         *       ],
         *       "message": "must be at least 11 characters long"
         *     } */
        Unauthorized: {
            code?: number;
            details?: {
                "@type"?: string;
                domain?: string;
                metadata?: Record<string, never>;
                reason?: string;
            }[];
            message?: string;
        };
        "google.protobuf.Empty": Record<string, never>;
        /** @example {
         *       "config": {
         *         "context": "",
         *         "environment": {
         *           "key1": "",
         *           "key2": ""
         *         }
         *       },
         *       "labels": {
         *         "key1": "",
         *         "key2": ""
         *       },
         *       "name": "",
         *       "userId": "",
         *       "workspaceId": ""
         *     } */
        "opencode.orchestrator.v1.CreateSessionRequest": {
            config?: components["schemas"]["opencode.orchestrator.v1.SessionConfig"];
            labels?: {
                [key: string]: string;
            };
            name?: string;
            userId?: string;
            workspaceId?: string;
        };
        /** @example {
         *       "key": "",
         *       "value": ""
         *     } */
        "opencode.orchestrator.v1.CreateSessionRequest_LabelsEntry": {
            key?: string;
            value?: string;
        };
        /** @example {
         *       "session": {
         *         "config": {
         *           "context": "",
         *           "environment": {
         *             "key1": "",
         *             "key2": ""
         *           }
         *         },
         *         "createdAt": 1741589979,
         *         "id": "",
         *         "labels": {
         *           "key1": "",
         *           "key2": ""
         *         },
         *         "lastAccessed": 1741589979,
         *         "name": "",
         *         "state": "SESSION_STATE_UNKNOWN",
         *         "status": {
         *           "message": "",
         *           "ready": true,
         *           "readyAt": 1741589979,
         *           "sessionEndpoint": "",
         *           "workspaceId": ""
         *         },
         *         "updatedAt": 1741589979,
         *         "userId": "",
         *         "workspaceId": ""
         *       }
         *     } */
        "opencode.orchestrator.v1.CreateSessionResponse": {
            session?: components["schemas"]["opencode.orchestrator.v1.Session"];
        };
        /** @example {
         *       "config": {
         *         "environment": {
         *           "key1": "",
         *           "key2": ""
         *         },
         *         "repository": {
         *           "ref": "",
         *           "url": ""
         *         },
         *         "resources": {
         *           "limits": {
         *             "key1": "",
         *             "key2": ""
         *           },
         *           "requests": {
         *             "key1": "",
         *             "key2": ""
         *           }
         *         }
         *       },
         *       "labels": {
         *         "key1": "",
         *         "key2": ""
         *       },
         *       "name": "",
         *       "userId": ""
         *     } */
        "opencode.orchestrator.v1.CreateWorkspaceRequest": {
            config?: components["schemas"]["opencode.orchestrator.v1.WorkspaceConfig"];
            labels?: {
                [key: string]: string;
            };
            name?: string;
            userId?: string;
        };
        /** @example {
         *       "key": "",
         *       "value": ""
         *     } */
        "opencode.orchestrator.v1.CreateWorkspaceRequest_LabelsEntry": {
            key?: string;
            value?: string;
        };
        /** @example {
         *       "workspace": {
         *         "config": {
         *           "environment": {
         *             "key1": "",
         *             "key2": ""
         *           },
         *           "repository": {
         *             "ref": "",
         *             "url": ""
         *           },
         *           "resources": {
         *             "limits": {
         *               "key1": "",
         *               "key2": ""
         *             },
         *             "requests": {
         *               "key1": "",
         *               "key2": ""
         *             }
         *           }
         *         },
         *         "createdAt": 1741589979,
         *         "id": "",
         *         "labels": {
         *           "key1": "",
         *           "key2": ""
         *         },
         *         "lastAccessed": 1741589979,
         *         "name": "",
         *         "sessionIds": [
         *           ""
         *         ],
         *         "state": "WORKSPACE_STATE_UNKNOWN",
         *         "status": {
         *           "activeSessions": 0,
         *           "internalEndpoint": "",
         *           "message": "",
         *           "podName": "",
         *           "podNamespace": "",
         *           "pvcName": "",
         *           "ready": true,
         *           "readyAt": 1741589979
         *         },
         *         "updatedAt": 1741589979,
         *         "userId": ""
         *       }
         *     } */
        "opencode.orchestrator.v1.CreateWorkspaceResponse": {
            workspace?: components["schemas"]["opencode.orchestrator.v1.Workspace"];
        };
        /** @example {
         *       "session": {
         *         "config": {
         *           "context": "",
         *           "environment": {
         *             "key1": "",
         *             "key2": ""
         *           }
         *         },
         *         "createdAt": 1741589979,
         *         "id": "",
         *         "labels": {
         *           "key1": "",
         *           "key2": ""
         *         },
         *         "lastAccessed": 1741589979,
         *         "name": "",
         *         "state": "SESSION_STATE_UNKNOWN",
         *         "status": {
         *           "message": "",
         *           "ready": true,
         *           "readyAt": 1741589979,
         *           "sessionEndpoint": "",
         *           "workspaceId": ""
         *         },
         *         "updatedAt": 1741589979,
         *         "userId": "",
         *         "workspaceId": ""
         *       }
         *     } */
        "opencode.orchestrator.v1.GetSessionResponse": {
            session?: components["schemas"]["opencode.orchestrator.v1.Session"];
        };
        /** @example {
         *       "workspace": {
         *         "config": {
         *           "environment": {
         *             "key1": "",
         *             "key2": ""
         *           },
         *           "repository": {
         *             "ref": "",
         *             "url": ""
         *           },
         *           "resources": {
         *             "limits": {
         *               "key1": "",
         *               "key2": ""
         *             },
         *             "requests": {
         *               "key1": "",
         *               "key2": ""
         *             }
         *           }
         *         },
         *         "createdAt": 1741589979,
         *         "id": "",
         *         "labels": {
         *           "key1": "",
         *           "key2": ""
         *         },
         *         "lastAccessed": 1741589979,
         *         "name": "",
         *         "sessionIds": [
         *           ""
         *         ],
         *         "state": "WORKSPACE_STATE_UNKNOWN",
         *         "status": {
         *           "activeSessions": 0,
         *           "internalEndpoint": "",
         *           "message": "",
         *           "podName": "",
         *           "podNamespace": "",
         *           "pvcName": "",
         *           "ready": true,
         *           "readyAt": 1741589979
         *         },
         *         "updatedAt": 1741589979,
         *         "userId": ""
         *       }
         *     } */
        "opencode.orchestrator.v1.GetWorkspaceResponse": {
            workspace?: components["schemas"]["opencode.orchestrator.v1.Workspace"];
        };
        /** @example {
         *       "details": {
         *         "key1": "",
         *         "key2": ""
         *       },
         *       "status": "UNKNOWN",
         *       "timestamp": 1741589979,
         *       "version": ""
         *     } */
        "opencode.orchestrator.v1.HealthResponse": {
            details?: {
                [key: string]: string;
            };
            /**
             * Format: enum
             * @enum {string}
             */
            status?: "UNKNOWN" | "SERVING" | "NOT_SERVING";
            /** Format: int32 */
            timestamp?: number;
            version?: string;
        };
        /** @example {
         *       "key": "",
         *       "value": ""
         *     } */
        "opencode.orchestrator.v1.HealthResponse_DetailsEntry": {
            key?: string;
            value?: string;
        };
        /** @example {
         *       "nextPageToken": "",
         *       "sessions": {
         *         "config": {
         *           "context": "",
         *           "environment": {
         *             "key1": "",
         *             "key2": ""
         *           }
         *         },
         *         "createdAt": 1741589979,
         *         "id": "",
         *         "labels": {
         *           "key1": "",
         *           "key2": ""
         *         },
         *         "lastAccessed": 1741589979,
         *         "name": "",
         *         "state": "SESSION_STATE_UNKNOWN",
         *         "status": {
         *           "message": "",
         *           "ready": true,
         *           "readyAt": 1741589979,
         *           "sessionEndpoint": "",
         *           "workspaceId": ""
         *         },
         *         "updatedAt": 1741589979,
         *         "userId": "",
         *         "workspaceId": ""
         *       },
         *       "totalSize": 0
         *     } */
        "opencode.orchestrator.v1.ListSessionsResponse": {
            nextPageToken?: string;
            sessions?: components["schemas"]["opencode.orchestrator.v1.Session"][];
            /** Format: int32 */
            totalSize?: number;
        };
        /** @example {
         *       "nextPageToken": "",
         *       "totalSize": 0,
         *       "workspaces": {
         *         "config": {
         *           "environment": {
         *             "key1": "",
         *             "key2": ""
         *           },
         *           "repository": {
         *             "ref": "",
         *             "url": ""
         *           },
         *           "resources": {
         *             "limits": {
         *               "key1": "",
         *               "key2": ""
         *             },
         *             "requests": {
         *               "key1": "",
         *               "key2": ""
         *             }
         *           }
         *         },
         *         "createdAt": 1741589979,
         *         "id": "",
         *         "labels": {
         *           "key1": "",
         *           "key2": ""
         *         },
         *         "lastAccessed": 1741589979,
         *         "name": "",
         *         "sessionIds": [
         *           ""
         *         ],
         *         "state": "WORKSPACE_STATE_UNKNOWN",
         *         "status": {
         *           "activeSessions": 0,
         *           "internalEndpoint": "",
         *           "message": "",
         *           "podName": "",
         *           "podNamespace": "",
         *           "pvcName": "",
         *           "ready": true,
         *           "readyAt": 1741589979
         *         },
         *         "updatedAt": 1741589979,
         *         "userId": ""
         *       }
         *     } */
        "opencode.orchestrator.v1.ListWorkspacesResponse": {
            nextPageToken?: string;
            /** Format: int32 */
            totalSize?: number;
            workspaces?: components["schemas"]["opencode.orchestrator.v1.Workspace"][];
        };
        /** @example {
         *       "body": "",
         *       "headers": {
         *         "key1": "",
         *         "key2": ""
         *       },
         *       "method": "",
         *       "path": "",
         *       "sessionId": "",
         *       "userId": "",
         *       "workspaceId": ""
         *     } */
        "opencode.orchestrator.v1.ProxyHTTPRequest": {
            /** Format: byte */
            body?: string;
            headers?: {
                [key: string]: string;
            };
            method?: string;
            path?: string;
            sessionId?: string;
            userId?: string;
            workspaceId?: string;
        };
        /** @example {
         *       "key": "",
         *       "value": ""
         *     } */
        "opencode.orchestrator.v1.ProxyHTTPRequest_HeadersEntry": {
            key?: string;
            value?: string;
        };
        /** @example {
         *       "body": "",
         *       "headers": {
         *         "key1": "",
         *         "key2": ""
         *       },
         *       "statusCode": 0
         *     } */
        "opencode.orchestrator.v1.ProxyHTTPResponse": {
            /** Format: byte */
            body?: string;
            headers?: {
                [key: string]: string;
            };
            /** Format: int32 */
            statusCode?: number;
        };
        /** @example {
         *       "key": "",
         *       "value": ""
         *     } */
        "opencode.orchestrator.v1.ProxyHTTPResponse_HeadersEntry": {
            key?: string;
            value?: string;
        };
        /** @example {
         *       "data": "",
         *       "error": ""
         *     } */
        "opencode.orchestrator.v1.ProxyStreamResponse": {
            /** Format: byte */
            data?: string;
            error?: string;
        };
        /** @example {
         *       "ref": "",
         *       "url": ""
         *     } */
        "opencode.orchestrator.v1.RepositoryConfig": {
            ref?: string;
            url?: string;
        };
        /** @example {
         *       "limits": {
         *         "key1": "",
         *         "key2": ""
         *       },
         *       "requests": {
         *         "key1": "",
         *         "key2": ""
         *       }
         *     } */
        "opencode.orchestrator.v1.ResourceRequirements": {
            limits?: {
                [key: string]: string;
            };
            requests?: {
                [key: string]: string;
            };
        };
        /** @example {
         *       "key": "",
         *       "value": ""
         *     } */
        "opencode.orchestrator.v1.ResourceRequirements_LimitsEntry": {
            key?: string;
            value?: string;
        };
        /** @example {
         *       "key": "",
         *       "value": ""
         *     } */
        "opencode.orchestrator.v1.ResourceRequirements_RequestsEntry": {
            key?: string;
            value?: string;
        };
        /** @example {
         *       "config": {
         *         "context": "",
         *         "environment": {
         *           "key1": "",
         *           "key2": ""
         *         }
         *       },
         *       "createdAt": 1741589979,
         *       "id": "",
         *       "labels": {
         *         "key1": "",
         *         "key2": ""
         *       },
         *       "lastAccessed": 1741589979,
         *       "name": "",
         *       "state": "SESSION_STATE_UNKNOWN",
         *       "status": {
         *         "message": "",
         *         "ready": true,
         *         "readyAt": 1741589979,
         *         "sessionEndpoint": "",
         *         "workspaceId": ""
         *       },
         *       "updatedAt": 1741589979,
         *       "userId": "",
         *       "workspaceId": ""
         *     } */
        "opencode.orchestrator.v1.Session": {
            config?: components["schemas"]["opencode.orchestrator.v1.SessionConfig"];
            /** Format: int32 */
            createdAt?: number;
            id?: string;
            labels?: {
                [key: string]: string;
            };
            /** Format: int32 */
            lastAccessed?: number;
            name?: string;
            /**
             * Format: enum
             * @enum {string}
             */
            state?: "SESSION_STATE_UNKNOWN" | "SESSION_STATE_CREATING" | "SESSION_STATE_RUNNING" | "SESSION_STATE_STOPPING" | "SESSION_STATE_STOPPED" | "SESSION_STATE_ERROR";
            status?: components["schemas"]["opencode.orchestrator.v1.SessionStatus"];
            /** Format: int32 */
            updatedAt?: number;
            userId?: string;
            workspaceId?: string;
        };
        /** @example {
         *       "key": "",
         *       "value": ""
         *     } */
        "opencode.orchestrator.v1.Session_LabelsEntry": {
            key?: string;
            value?: string;
        };
        /** @example {
         *       "context": "",
         *       "environment": {
         *         "key1": "",
         *         "key2": ""
         *       }
         *     } */
        "opencode.orchestrator.v1.SessionConfig": {
            context?: string;
            environment?: {
                [key: string]: string;
            };
        };
        /** @example {
         *       "key": "",
         *       "value": ""
         *     } */
        "opencode.orchestrator.v1.SessionConfig_EnvironmentEntry": {
            key?: string;
            value?: string;
        };
        /** @example {
         *       "message": "",
         *       "ready": true,
         *       "readyAt": 1741589979,
         *       "sessionEndpoint": "",
         *       "workspaceId": ""
         *     } */
        "opencode.orchestrator.v1.SessionStatus": {
            message?: string;
            ready?: boolean;
            /** Format: int32 */
            readyAt?: number;
            sessionEndpoint?: string;
            workspaceId?: string;
        };
        /** @example {
         *       "config": {
         *         "environment": {
         *           "key1": "",
         *           "key2": ""
         *         },
         *         "repository": {
         *           "ref": "",
         *           "url": ""
         *         },
         *         "resources": {
         *           "limits": {
         *             "key1": "",
         *             "key2": ""
         *           },
         *           "requests": {
         *             "key1": "",
         *             "key2": ""
         *           }
         *         }
         *       },
         *       "createdAt": 1741589979,
         *       "id": "",
         *       "labels": {
         *         "key1": "",
         *         "key2": ""
         *       },
         *       "lastAccessed": 1741589979,
         *       "name": "",
         *       "sessionIds": "",
         *       "state": "WORKSPACE_STATE_UNKNOWN",
         *       "status": {
         *         "activeSessions": 0,
         *         "internalEndpoint": "",
         *         "message": "",
         *         "podName": "",
         *         "podNamespace": "",
         *         "pvcName": "",
         *         "ready": true,
         *         "readyAt": 1741589979
         *       },
         *       "updatedAt": 1741589979,
         *       "userId": ""
         *     } */
        "opencode.orchestrator.v1.Workspace": {
            config?: components["schemas"]["opencode.orchestrator.v1.WorkspaceConfig"];
            /** Format: int32 */
            createdAt?: number;
            id?: string;
            labels?: {
                [key: string]: string;
            };
            /** Format: int32 */
            lastAccessed?: number;
            name?: string;
            sessionIds?: string[];
            /**
             * Format: enum
             * @enum {string}
             */
            state?: "WORKSPACE_STATE_UNKNOWN" | "WORKSPACE_STATE_CREATING" | "WORKSPACE_STATE_RUNNING" | "WORKSPACE_STATE_STOPPING" | "WORKSPACE_STATE_STOPPED" | "WORKSPACE_STATE_ERROR";
            status?: components["schemas"]["opencode.orchestrator.v1.WorkspaceStatus"];
            /** Format: int32 */
            updatedAt?: number;
            userId?: string;
        };
        /** @example {
         *       "key": "",
         *       "value": ""
         *     } */
        "opencode.orchestrator.v1.Workspace_LabelsEntry": {
            key?: string;
            value?: string;
        };
        /** @example {
         *       "environment": {
         *         "key1": "",
         *         "key2": ""
         *       },
         *       "repository": {
         *         "ref": "",
         *         "url": ""
         *       },
         *       "resources": {
         *         "limits": {
         *           "key1": "",
         *           "key2": ""
         *         },
         *         "requests": {
         *           "key1": "",
         *           "key2": ""
         *         }
         *       }
         *     } */
        "opencode.orchestrator.v1.WorkspaceConfig": {
            environment?: {
                [key: string]: string;
            };
            repository?: components["schemas"]["opencode.orchestrator.v1.RepositoryConfig"];
            resources?: components["schemas"]["opencode.orchestrator.v1.ResourceRequirements"];
        };
        /** @example {
         *       "key": "",
         *       "value": ""
         *     } */
        "opencode.orchestrator.v1.WorkspaceConfig_EnvironmentEntry": {
            key?: string;
            value?: string;
        };
        /** @example {
         *       "activeSessions": 0,
         *       "internalEndpoint": "",
         *       "message": "",
         *       "podName": "",
         *       "podNamespace": "",
         *       "pvcName": "",
         *       "ready": true,
         *       "readyAt": 1741589979
         *     } */
        "opencode.orchestrator.v1.WorkspaceStatus": {
            /** Format: int32 */
            activeSessions?: number;
            internalEndpoint?: string;
            message?: string;
            podName?: string;
            podNamespace?: string;
            pvcName?: string;
            ready?: boolean;
            /** Format: int32 */
            readyAt?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    OrchestratorService_Health: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["opencode.orchestrator.v1.HealthResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequest"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Unauthorized"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InternalServerError"];
                };
            };
        };
    };
    OrchestratorService_ListWorkspaces: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["opencode.orchestrator.v1.ListWorkspacesResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequest"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Unauthorized"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InternalServerError"];
                };
            };
        };
    };
    OrchestratorService_CreateWorkspace: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["opencode.orchestrator.v1.CreateWorkspaceRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["opencode.orchestrator.v1.CreateWorkspaceResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequest"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Unauthorized"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InternalServerError"];
                };
            };
        };
    };
    OrchestratorService_GetWorkspace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @example  */
                workspaceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["opencode.orchestrator.v1.GetWorkspaceResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequest"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Unauthorized"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InternalServerError"];
                };
            };
        };
    };
    OrchestratorService_DeleteWorkspace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @example  */
                workspaceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["google.protobuf.Empty"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequest"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Unauthorized"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InternalServerError"];
                };
            };
        };
    };
    OrchestratorService_ListSessions: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @example  */
                workspaceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["opencode.orchestrator.v1.ListSessionsResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequest"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Unauthorized"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InternalServerError"];
                };
            };
        };
    };
    OrchestratorService_CreateSession: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @example  */
                workspaceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["opencode.orchestrator.v1.CreateSessionRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["opencode.orchestrator.v1.CreateSessionResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequest"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Unauthorized"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InternalServerError"];
                };
            };
        };
    };
    OrchestratorService_GetSession: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @example  */
                workspaceId: string;
                /** @example  */
                sessionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["opencode.orchestrator.v1.GetSessionResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequest"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Unauthorized"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InternalServerError"];
                };
            };
        };
    };
    OrchestratorService_DeleteSession: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @example  */
                workspaceId: string;
                /** @example  */
                sessionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["google.protobuf.Empty"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequest"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Unauthorized"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InternalServerError"];
                };
            };
        };
    };
    OrchestratorService_ProxyHTTP: {
        parameters: {
            query?: {
                /** @example  */
                workspaceId?: string;
                /** @example  */
                sessionId?: string;
            };
            header?: never;
            path: {
                /** @example  */
                workspaceId: string;
                /** @example  */
                sessionId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["opencode.orchestrator.v1.ProxyHTTPRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["opencode.orchestrator.v1.ProxyHTTPResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequest"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Unauthorized"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InternalServerError"];
                };
            };
        };
    };
}
